-- Criação do schema emprestimo
CREATE SCHEMA IF NOT EXISTS emprestimo;

-- emprestimo.tb_book definição
CREATE TABLE IF NOT EXISTS emprestimo.tb_book (
    sq_book BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    autor VARCHAR(255),
    data_publicacao DATE,
    disponivel BOOLEAN,
    isbn VARCHAR(255),
    titulo VARCHAR(255),
    quantidade_exemplares INT
);

-- emprestimo.tb_user definição
CREATE TABLE IF NOT EXISTS emprestimo.tb_user (
    sq_user BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(255),
    nome VARCHAR(255),
    "role" VARCHAR(255),
    senha VARCHAR(255)
);

-- emprestimo.tb_favorite definição
CREATE TABLE IF NOT EXISTS emprestimo.tb_favorite (
    sq_favorite BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    livro_id BIGINT,
    usuario_id BIGINT,
    CONSTRAINT fk_tb_favorite_livro FOREIGN KEY (livro_id) REFERENCES emprestimo.tb_book (sq_book),
    CONSTRAINT fk_tb_favorite_usuario FOREIGN KEY (usuario_id) REFERENCES emprestimo.tb_user (sq_user)
);

-- emprestimo.tb_loan definição
CREATE TABLE IF NOT EXISTS emprestimo.tb_loan (
    sq_loan BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    data_devolucao TIMESTAMP,
    data_emprestimo TIMESTAMP,
    status VARCHAR(255),
    livro_id BIGINT,
    usuario_id BIGINT,
    CONSTRAINT fk_tb_loan_livro FOREIGN KEY (livro_id) REFERENCES emprestimo.tb_book (sq_book),
    CONSTRAINT fk_tb_loan_usuario FOREIGN KEY (usuario_id) REFERENCES emprestimo.tb_user (sq_user)
);
